{"version":3,"file":"Icon.jsx","sourceRoot":"","sources":["Icon.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,qBAAqB,CAAA;AAC5B,OAAO,YAAY,CAAA;AACnB,OAAO,UAAU,MAAM,oBAAoB,CAAA;AAC3C,OAAO,SAAS,MAAM,mBAAmB,CAAA;AACzC,OAAO,WAAW,MAAM,qBAAqB,CAAA;AA2B7C,MAAM,IAAI,GAAG,CAAC,EACZ,EAAE,GAAE,EAAE,EACN,OAAO,GAAG,EAAE,EACZ,IAAI,GAAG,EAAE,EACT,OAAO,GAAG,WAAW,EACrB,KAAK,EACL,KAAK,GAAG,EAAE,EACV,MAAM,GAAG,EAAE,EACX,QAAQ,GACI,EAAE,EAAE;IAEhB,MAAM,KAAK,iDAAO,SAAS,GAAK,UAAU,GAAK,WAAW,CAAC,CAAA;IAE3D,IAAI,IAAI,GAAG,EAA8B,CAAA;IACzC,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;IACvB,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAA;IACjC,CAAC;IACD,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAA;IACjC,CAAC;IACD,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA;IACnB,CAAC;IAED,OAAO,CACL,EACE;MAAA,CAAC,GAAG,CACF,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,SAAS,CAAC,CAAC,QAAQ,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,CAClE,OAAO,CAAC,KAAK,CACb,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CACtB,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CACpB,KAAK,CAAC,4BAA4B,CAClC,OAAO,CAAC,CAAC,OAAO,CAAC,CAEjB;QAAA,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,OAAO,CAAC,EAAE,KAAK,CACvC;QAAA,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CACxB;MAAA,EAAE,GAAG,CACP;IAAA,GAAG,CACJ,CAAA;AACH,CAAC,CAAA;AAED,eAAe,IAAI,CAAA","sourcesContent":["import React from 'react'\r\nimport '../design/style.css'\r\nimport './Icon.css'\r\nimport navigation from './paths/navigation' \r\nimport operation from './paths/operation'\r\nimport information from './paths/information'\r\n\r\nexport interface IconProps {\r\n  id?: string\r\n  /** Optional additional styling\r\n  */\r\n  classes?: string\r\n  /** String to decide what to display\r\n  */\r\n  name: string\r\n  /** Height of icon to control visual size\r\n  */\r\n  height?: number\r\n  /** Title of icon for accessibility, descriptions\r\n  */\r\n  title?: string\r\n  /** Width of icon to control visual size\r\n  */\r\n  width?: number\r\n  /** Manually enter a viewbox to override the default 0 0 12 12 \r\n  */\r\n  viewbox?: string\r\n  /** A disabled icon will render in a new color and be noninteractive\r\n  */\r\n  disabled?: boolean\r\n}\r\n\r\nconst Icon = ({\r\n  id ='',\r\n  classes = '',\r\n  name = '',\r\n  viewbox = '0 0 16 16',\r\n  title,\r\n  width = 16,\r\n  height = 16,\r\n  disabled,\r\n  }: IconProps) => {\r\n\r\n  const paths = {...operation, ...navigation, ...information}\r\n\r\n  let opts = {} as { [key:string]: string }\r\n  const svg = paths[name]\r\n  if (svg.fillRule) {\r\n    opts['fillRule'] = svg.fillRule\r\n  }\r\n  if (svg.clipRule) {\r\n    opts['clipRule'] = svg.clipRule\r\n  }\r\n  if (svg.d) {\r\n    opts['d'] = svg.d\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <svg\r\n        id={id}\r\n        className={`icon ${classes} ${disabled ? 'Disabled' : ''}`.trim()}\r\n        version=\"1.1\"\r\n        height={`${height}px`}\r\n        width={`${width}px`}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox={viewbox}\r\n      >\r\n        <title>{title || `${name} icon`}</title>\r\n        <path {...opts}></path>\r\n      </svg>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Icon"]}