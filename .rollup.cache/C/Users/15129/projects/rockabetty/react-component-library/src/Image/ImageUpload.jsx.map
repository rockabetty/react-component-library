{"version":3,"file":"ImageUpload.jsx","sourceRoot":"","sources":["ImageUpload.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,OAAO,UAAU,MAAM,YAAY,CAAA;AACnC,OAAO,aAAa,CAAA;AACpB,OAAO,kBAAkB,CAAA;AAiBzB,MAAM,WAAW,GAAG,CAAC,EACnB,EAAE,GAAG,EAAE,EACP,GAAG,GAAG,EAAE,EACR,GAAG,GAAG,EAAE,EACR,SAAS,GAAG,oBAAoB,EAChC,OAAO,GAAG,GAAG,EACb,QAAQ,GAAG,KAAK,EAChB,SAAS,GAAG,EAAE,EACd,UAAU,GAAG,EAAE,EACf,QAAQ,GAAG,KAAK,EAChB,QAAQ,GAAG,KAAK,EAChB,IAAI,GAAG,EAAE,EACT,QAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,GACF,EAAE,EAAE;IACrB,MAAM,EACJ,UAAU,EACV,SAAS,EACT,gBAAgB,EACjB,GAAG,gBAAgB,CAAC;QACnB,OAAO;QACP,gBAAgB,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC;QACxE,UAAU,EAAE,GAAG;QACf,QAAQ;KACT,CAAC,CAAC;IAEH,+DAA+D;IAC/D,sCAAsC;IACtC,MAAM,YAAY,GAAG,UAAU,IAAI,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAExE,OAAO,CACL,EACE;MAAA,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC;YACjC,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,QAAQ;YACpB,UAAU,EAAE,QAAQ;YACpB,OAAO,EAAE,CAAC,CAAC,SAAS;SACrB,CAAC,CAAC,CACD;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;UAAA,CAAC,KAAK,CACJ,EAAE,CAAC,CAAC,GAAG,EAAE,eAAe,CAAC,CACzB,SAAS,CAAC,gBAAgB,CAC1B,IAAI,CAAC,MAAM,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAC3B,MAAM,CAAC,yDAAyD,CAChE,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAErB;UAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,SAAS,CAAC,4BAA4B,CAC1E;YAAA,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE,IAAI,CACzB;UAAA,EAAE,KAAK,CACT;QAAA,EAAE,GAAG,CAEL;;QAAA,CAAC,YAAY,IAAI,CACf,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,YAAY,CAAC,CAClB,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,aAAa,EACvB,CACH,CACH;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,yBAAyB,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,CAC1E;QAAA,CAAC,SAAS,IAAI,SAAS,IAAI,UAAU,CACvC;MAAA,EAAE,IAAI,CACR;IAAA,GAAG,CACJ,CAAA;AACH,CAAC,CAAA;AAED,eAAe,WAAW,CAAA","sourcesContent":["import React from 'react'\r\nimport useImageUploader from './useImageUploader';\r\nimport classNames from 'classnames'\r\nimport './Image.css'\r\nimport '../Form/Form.css'\r\n\r\nexport interface ImageUploadProps {\r\n  id?: string;\r\n  alt?: string;\r\n  src?: string;\r\n  maxSize?: number;\r\n  editable?: boolean;\r\n  helperText?: string;\r\n  errorText?: string;\r\n  labelText?: string;\r\n  required?: boolean;\r\n  flexible?: boolean;\r\n  name?: string;\r\n  onChange?: (files: FileList | null) => void;\r\n}\r\n\r\nconst ImageUpload = ({\r\n  id = \"\",\r\n  src = \"\",\r\n  alt = \"\",\r\n  labelText = \"Upload a new image\",\r\n  maxSize = 600,\r\n  editable = false,\r\n  errorText = '',\r\n  helperText = '',\r\n  required = false,\r\n  flexible = false,\r\n  name = '',\r\n  onChange = () => {},\r\n}: ImageUploadProps) => {\r\n  const { \r\n    previewUrl, \r\n    fileError, \r\n    handleFileChange \r\n  } = useImageUploader({\r\n    maxSize,\r\n    allowedFileTypes: ['image/jpeg', 'image/gif', 'image/png', 'image/tiff'],\r\n    initialSrc: src,\r\n    onChange,\r\n  });\r\n\r\n  // Use previewUrl if available, otherwise fall back to src prop\r\n  // Ensure we're only using string URLs\r\n  const displayImage = previewUrl || (typeof src === 'string' ? src : '');\r\n\r\n  return (\r\n    <>\r\n      <div id={id} className={classNames({\r\n        \"image\": true,\r\n        \"Editable\": editable,\r\n        \"Flexible\": flexible,\r\n        \"Error\": !!fileError\r\n      })}>\r\n        <div className=\"image_overlay\">\r\n          <input\r\n            id={`${id}-image-upload`}\r\n            className=\"image_uploader\"\r\n            type=\"file\"\r\n            name={name}\r\n            onChange={handleFileChange}\r\n            accept=\"image/png, image/gif, image/jpg, image/jpeg, image/tiff\"\r\n            required={required}\r\n          />\r\n          <label htmlFor={`${id}-image-upload`} className='image_upload-label Editing'>\r\n            <span>{labelText}</span>\r\n          </label>\r\n        </div>\r\n\r\n        {displayImage && (\r\n          <img \r\n            src={displayImage} \r\n            alt={alt} \r\n            className=\"image_image\"\r\n          />\r\n        )}\r\n      </div>\r\n      <span className={`form-field_helpertext ${fileError ? 'Error' : ''}`.trim()}>\r\n        {fileError || errorText || helperText}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageUpload"]}