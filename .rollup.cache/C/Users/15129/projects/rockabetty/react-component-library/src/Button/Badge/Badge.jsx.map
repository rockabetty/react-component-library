{"version":3,"file":"Badge.jsx","sourceRoot":"","sources":["Badge.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,UAAU,MAAM,eAAe,CAAA;AACtC,OAAO,UAAU,MAAM,YAAY,CAAA;AACnC,OAAO,IAAI,MAAM,YAAY,CAAA;AAC7B,OAAO,wBAAwB,CAAA;AAC/B,OAAO,aAAa,CAAA;AA8CpB,MAAM,KAAK,GAAG,CAAC,EACb,EAAE,GAAG,EAAE,EACP,OAAO,GAAG,WAAW,EACrB,IAAI,GAAG,SAAS,EAChB,QAAQ,EACR,OAAO,GAAG,GAAG,EAAE,GAAE,CAAC,EAClB,QAAQ,EACR,IAAI,GAAG,OAAO,EACd,KAAK,EACL,IAAI,GAAG,IAAI,EACX,KAAK,GAAG,SAAS,EACjB,MAAM,GAAG,SAAS,EAClB,SAAS,GAAG,KAAK,EACN,EAAE,EAAE;IAEf,IAAI,SAAS,EAAE,UAAU,GAAG,EAAE,CAAC;IAE/B,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QAClB,SAAS,GAAG,EAAE,CAAC;QACf,UAAU,GAAG,EAAE,CAAC;IAClB,CAAC;IACD,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QAClB,SAAS,GAAG,EAAE,CAAC;QACf,UAAU,GAAG,EAAE,CAAC;IAClB,CAAC;IACD,IAAI,MAAM,EAAE,CAAC;QACX,UAAU,GAAG,MAAM,CAAC;IACtB,CAAC;IACD,IAAI,KAAK,EAAE,CAAC;QACV,SAAS,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,OAAM,CACJ,CAAC,UAAU,CACT,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAE,OAAO,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAC7B,OAAO,CAAC,CAAC,UAAU,CAAC;YAClB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,SAAS,KAAK,IAAI;SAC9B,CAAC,CAAC,CACH,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,QAAQ,CACb,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,IAAI,CAAC,QAAQ,CAEb;MAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EACvF;MAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAC1E;IAAA,EAAE,UAAU,CAAC,CACd,CAAA;AACH,CAAC,CAAA;AAED,eAAe,KAAK,CAAA","sourcesContent":["import React from 'react'\r\nimport ButtonAtom from '../ButtonAtom'\r\nimport classNames from 'classnames'\r\nimport Icon from '../../Icon'\r\nimport '../../design/style.css'\r\nimport './Badge.css'\r\n\r\nexport interface BadgeProps {\r\n  id?: string\r\n  /**\r\n   * \"primary\": highlights the next logical step forward.\r\n   * \"warning\": denotes the button destroys data, e.g. 'delete'.\r\n   * \"muted\": For coupling with primary buttons as the 'backward' step.\r\n   */\r\n  look?: 'primary' | 'default' | 'muted' | 'warning' | undefined\r\n  /**\r\n   * A disabled button renders but can no longer be clicked.\r\n   */\r\n  disabled?: boolean\r\n  /**\r\n   * All buttons must have labels for accessibility purposes\r\n  */\r\n  label?: string\r\n  /**\r\n   * Set 'showLabel' to true to show a text label next to the icon.\r\n  */\r\n  showLabel?: boolean\r\n  /**\r\n   * A function to be called when the button is clicked\r\n   */\r\n  onClick?: (...params: any) => any\r\n  tabIndex?: number\r\n  /**\r\n   * A name for an icon to place in the badge\r\n  */\r\n  icon: string\r\n  /** \r\n  * Control the width of an icon SVG\r\n  */\r\n  width?: number\r\n  /**\r\n   * Control the height of an icon SVG\r\n   */\r\n  height?: number\r\n   /**\r\n    * Specify the viewbox of an icon SVG\r\n    */\r\n  viewbox?: string\r\n  size?: 'md' | 'sm' | 'lg';\r\n}\r\n\r\nconst Badge = ({\r\n  id = '',\r\n  viewbox = \"0 0 16 16\",\r\n  look = \"default\",\r\n  disabled,\r\n  onClick = () => {},\r\n  tabIndex,\r\n  icon = 'close',\r\n  label,\r\n  size = 'md',\r\n  width = undefined,\r\n  height = undefined,\r\n  showLabel = false\r\n}: BadgeProps) => {\r\n\r\n  let iconWidth, iconHeight = 24;\r\n\r\n  if (size === 'lg') {\r\n    iconWidth = 32;\r\n    iconHeight = 32;\r\n  }\r\n  if (size === 'sm') {\r\n    iconWidth = 16;\r\n    iconHeight = 16;\r\n  }\r\n  if (height) {\r\n    iconHeight = height;\r\n  }\r\n  if (width) {\r\n    iconWidth = width;\r\n  }\r\n  \r\n  return(\r\n    <ButtonAtom\r\n      id={id}\r\n      disabled={disabled}\r\n      onClick={(e) => {onClick(e)}}\r\n      classes={classNames({\r\n        'Badge': true,\r\n        'Labeled': showLabel === true\r\n      })}\r\n      look={look}\r\n      role='button'\r\n      tabIndex={tabIndex}\r\n      type='button'\r\n    >\r\n      <Icon name={icon} title={label} width={iconWidth} height={iconHeight} viewbox={viewbox}/>\r\n      <span className={showLabel ? 'button-label' : 'Invisible'}>{label}</span>\r\n    </ButtonAtom>\r\n  )\r\n}\r\n\r\nexport default Badge"]}