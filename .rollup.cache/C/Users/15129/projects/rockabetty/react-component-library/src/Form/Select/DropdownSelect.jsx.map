{"version":3,"file":"DropdownSelect.jsx","sourceRoot":"","sources":["DropdownSelect.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,wBAAwB,CAAC;AAChC,OAAO,aAAa,CAAC;AACrB,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAE3C,OAAO,EAAC,OAAO,IAAI,KAAK,EAAC,MAAM,gBAAgB,CAAC;AAchD,MAAM,cAAc,GAAG,CAAC,KAAkB,EAAE,EAAE;IAE5C,MAAM,EAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAC,GAAG,KAAK,CAAC;IAE3H,OAAM,CACJ,CAAC,SAAS,CACR,OAAO,CAAC,CAAC,UAAU,CAAC;YAClB,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,QAAQ;YACpB,OAAO,EAAE,MAAM,KAAK,OAAO;SAC5B,CAAC,CAAC,CAEH;MAAA,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAC5B;MAAA,CAAC,MAAM,CACL,SAAS,CAAC,CAAC,sBAAsB,UAAU,CAAC;YAC1C,OAAO,EAAG,MAAM,KAAK,OAAO;YAC5B,OAAO,EAAG,MAAM,KAAK,OAAO;SAC7B,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CACZ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,KAAK,CAAC,CAAC,KAAK,CAAC,CAEb;QAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC3B,OAAO,CACL,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,mBAAmB,GAAG,EAAE,CAAC,CAC9B,SAAS,CAAC,mBAAmB,CAC7B,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACpB,KAAK,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CACxB,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAC1B,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACxB,CAAC,CAAA;QACP,CAAC,CAAC,CACJ;MAAA,EAAE,MAAM,CACR;MAAA,CAAE,UAAU,IAAI,MAAM,KAAK,OAAO,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAChC;UAAA,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAW,CAC/C;QAAA,EAAE,CAAC,CAAC;YACJ,CAAC;gBACD,IACF,CACF;IAAA,EAAE,SAAS,CAAC,CACb,CAAA;AACH,CAAC,CAAA;AAED,eAAe,cAAc,CAAA","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport '../../design/style.css';\r\nimport '../Form.css';\r\nimport FormField from '../atoms/FormField';\r\nimport {InputProps} from '../../types/input';\r\nimport {default as Label} from '../atoms/Label';\r\n\r\ntype Option = {\r\n  value: string;\r\n  labelText: string;\r\n  disabled?: boolean;\r\n  onClick?: () => {};\r\n}\r\n\r\nexport interface SelectProps extends InputProps {\r\n  options: Option[]\r\n  multiple?: boolean\r\n}\r\n\r\nconst DropdownSelect = (props: SelectProps) => {\r\n\r\n  const {status, disabled, id, name, onChange, tabIndex, value, labelText, options, helperText, errorText, multiple} = props;\r\n  \r\n  return(\r\n    <FormField\r\n      classes={classNames({\r\n        'Compact': true,\r\n        'Disabled': disabled,\r\n        'Error': status === 'error'\r\n      })}\r\n    >\r\n      <Label labelText={labelText}/>\r\n      <select\r\n        className={`form-field_control ${classNames({\r\n          'Valid' : status === 'valid',\r\n          'Error' : status === 'error'\r\n        })}`.trim()}\r\n        disabled={disabled}\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        tabIndex={tabIndex}\r\n        value={value}\r\n      >\r\n        {options.map((option, idx) => {\r\n          return (\r\n            <option\r\n              key={`dropdown-select-${idx}`}\r\n              className=\"form-field_option\"\r\n              value={option.value} \r\n              label={option.labelText} \r\n              disabled={option.disabled} \r\n              onClick={option.onClick}\r\n            />)\r\n        })}\r\n      </select>\r\n      { helperText || status === 'error' ?\r\n        <p className=\"checkbox_helpertext\">\r\n          {status === 'error' ? errorText : helperText }\r\n        </p>\r\n        :\r\n        null\r\n      }\r\n    </FormField>\r\n  )\r\n}\r\n\r\nexport default DropdownSelect"]}