{"version":3,"file":"Link.jsx","sourceRoot":"","sources":["Link.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,qBAAqB,CAAC;AAC7B,OAAO,YAAY,CAAC;AACpB,OAAO,sBAAsB,CAAC;AAsC9B,MAAM,IAAI,GAAG,CAAC,EACZ,EAAE,GAAG,EAAE,EACP,QAAQ,GAAG,MAAM,EACjB,IAAI,GAAG,GAAG,EACV,MAAM,GAAG,OAAO,EAChB,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,IAAI,GAAG,SAAS,EAChB,OAAO,GAAG,KAAK,EACN,EAAE,EAAE;IAEb,OAAM,CACJ,CAAC,CAAC,CACA,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,SAAS,CAAC,CAAC,UAAU,CAAC;YACpB,SAAS,EAAE,CAAC,CAAC,OAAO;YACpB,YAAY,EAAE,IAAI,KAAK,YAAY;YACnC,UAAU,EAAE,CAAC,CAAC,QAAQ;YACtB,QAAQ,EAAE,IAAI,KAAK,QAAQ;YAC3B,OAAO,EAAE,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,OAAO;YAC9C,SAAS,EAAE,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAI,SAAS;YACjD,SAAS,EAAE,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,SAAS;YAClD,MAAM,EAAE,IAAI,KAAK,QAAQ;YACzB,QAAQ,EAAE,IAAI,KAAK,QAAQ;SAC5B,CAAC,CAAC,CACH,OAAO,CAAC,CAAC,OAAO,CAAC,CAEjB;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,CAAC,CAAC,CACL,CAAA;AACH,CAAC,CAAA;AAED,eAAe,IAAI,CAAA","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport '../design/style.css';\r\nimport './Link.css';\r\nimport '../Button/Button.css';\r\nimport { InteractiveProps } from '../types/interactive';\r\n\r\nexport interface LinkProps extends InteractiveProps {\r\n  /**\r\n   * Children for the link\r\n  */\r\n  children: React.ReactNode\r\n  /**\r\n   * Pass the `href` attribute for the <a> element\r\n   */\r\n  href: string\r\n  /**\r\n   * Pass the <a> element target attribute\r\n  * */\r\n  target?: '_blank' | '_self' | '_parent' | '_top' | 'framename'\r\n  /**\r\n   * Toggle appearance and behavior when disabled\r\n  * */\r\n  disabled?: boolean\r\n  /**\r\n   * custom on click event function\r\n  * */\r\n  onClick?: (...params: any) => any\r\n  /**\r\n   * Shift the appearance of the link for semantic vs visual presentation needs\r\n  * */\r\n  type?: 'default' | 'button' | 'navigation'\r\n  /**\r\n   * Select the visual presentation of the link when it has a Button appearance\r\n   * */\r\n  look?: 'primary' | 'default' | 'muted' | 'warning' | undefined;\r\n  /**\r\n   * Select for inverse color combos\r\n   * */\r\n  inverse?: boolean\r\n}\r\n\r\nconst Link = ({\r\n  id = '',\r\n  children = 'Link',\r\n  href = '#',\r\n  target = '_self',\r\n  disabled,\r\n  type,\r\n  onClick,\r\n  look = 'default',\r\n  inverse = false\r\n}:LinkProps) => {\r\n\r\n  return(\r\n    <a\r\n      id={id}\r\n      href={href}\r\n      target={target}\r\n      className={classNames({\r\n        'Inverse': !!inverse,\r\n        'Navigation': type === 'navigation',\r\n        'Disabled': !!disabled,\r\n        'button': type === 'button',\r\n        'Muted': type === 'button' && look === 'muted',\r\n        'Primary': type === 'button' && look ==='primary',\r\n        'Warning': type === 'button' && look === 'warning',\r\n        'link': type !== 'button',\r\n        'Inline': type === 'button'\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Link"]}