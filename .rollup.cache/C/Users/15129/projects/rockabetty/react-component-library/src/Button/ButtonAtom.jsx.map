{"version":3,"file":"ButtonAtom.jsx","sourceRoot":"","sources":["ButtonAtom.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,UAAU,MAAM,YAAY,CAAA;AACnC,OAAO,qBAAqB,CAAA;AAC5B,OAAO,cAAc,CAAA;AAiBrB,MAAM,UAAU,GAAG,CAAC,EAClB,EAAE,GAAE,EAAE,EACN,IAAI,EACJ,QAAQ,EACR,QAAQ,GAAG,KAAK,EAChB,OAAO,EACP,OAAO,GAAG,GAAG,EAAE,GAAE,CAAC,EAClB,IAAI,GAAG,QAAQ,EACf,QAAQ,EACR,IAAI,GAAG,QAAQ,EACf,MAAM,GAAG,KAAK,EACd,OAAO,GAAG,EAAE,EACZ,OAAO,GAAG,KAAK,EACG,EAAE,EAAE;IAEtB,OAAM,CACJ,CAAC,MAAM,CACL,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAE,OAAO,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAC7B,SAAS,CAAC,CAAC,sBAAsB,OAAO,IAAI,UAAU,CAAC;YACrD,UAAU,EAAE,CAAC,CAAC,QAAQ;YACtB,OAAO,EAAE,IAAI,KAAK,OAAO;YACzB,SAAS,EAAE,IAAI,KAAI,SAAS;YAC5B,SAAS,EAAE,IAAI,KAAK,SAAS;YAC7B,QAAQ,EAAE,CAAC,CAAC,MAAM;YAClB,SAAS,EAAE,CAAC,CAAC,OAAO;SACrB,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,IAAI,CAAC,CAAC,IAAI,CAAC,CAEX;MAAA,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAC7B;IAAA,EAAE,MAAM,CAAC,CACV,CAAA;AACH,CAAC,CAAA;AAED,eAAe,UAAU,CAAA","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport '../design/style.css'\r\nimport './Button.css'\r\n\r\ninterface ButtonAtomProps {\r\n  id?: string;\r\n  children: React.ReactNode;\r\n  look?: 'primary' | 'default' | 'muted' | 'warning' | undefined;\r\n  classes?: string;\r\n  disabled?: boolean;\r\n  onClick?: (...params: any) => any;\r\n  role?: string;\r\n  tabIndex?: number;\r\n  type?: 'button' | 'reset' | 'submit';\r\n  loading?: boolean;\r\n  inline?: boolean;\r\n  inverse?: boolean;\r\n}\r\n\r\nconst ButtonAtom = ({\r\n  id ='',\r\n  look,\r\n  children,\r\n  disabled = false,\r\n  loading,\r\n  onClick = () => {},\r\n  role = \"button\",\r\n  tabIndex,\r\n  type = \"button\",\r\n  inline = false,\r\n  classes = '',\r\n  inverse = false\r\n  }: ButtonAtomProps) => {\r\n\r\n  return(\r\n    <button\r\n      id={id}\r\n      disabled={disabled}\r\n      onClick={(e) => {onClick(e)}}\r\n      className={`button DisplayText ${classes} ${classNames({\r\n        'Disabled': !!disabled,\r\n        'Muted': look === 'muted',\r\n        'Primary': look ==='primary',\r\n        'Warning': look === 'warning',\r\n        'Inline': !!inline,\r\n        'Inverse': !!inverse\r\n      })}`.trim()}\r\n      role={role}\r\n      tabIndex={tabIndex}\r\n      type={type}\r\n    >\r\n      {loading ? \"...\" : children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ButtonAtom"]}