{"version":3,"file":"Button.jsx","sourceRoot":"","sources":["Button.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,UAAU,MAAM,cAAc,CAAC;AAiCtC,MAAM,MAAM,GAA0B,CAAC,KAAK,EAAE,EAAE;IAC9C,OAAO,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,EAAG,CAAA;AAClC,CAAC,CAAA;AAED,eAAe,MAAM,CAAA","sourcesContent":["import React from 'react'\r\nimport ButtonAtom from './ButtonAtom';\r\n\r\ninterface ButtonProps {\r\n  id?: string;\r\n  /**\r\n   * Button content.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * \"primary\": highlights the next logical step forward.\r\n   * \"warning\": denotes the button destroys data, e.g. 'delete'.\r\n   * \"muted\": For coupling with primary buttons as the 'backward' step.\r\n   */\r\n  look?: 'primary' | 'default' | 'muted' | 'warning' | undefined;\r\n  /**\r\n   * A disabled button renders but can no longer be clicked.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * A function to be called when the button is clicked\r\n   */\r\n  onClick?: (...params: any) => any;\r\n  /**\r\n   * Specify the role of the button for accessibility\r\n   */\r\n  role?: string;\r\n  tabIndex?: number;\r\n  type?: 'button' | 'reset' | 'submit';\r\n  loading?: boolean;\r\n  inline?: boolean;\r\n  inverse?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props) => {\r\n  return <ButtonAtom {...props} />\r\n}\r\n\r\nexport default Button"]}