{"version":3,"file":"useImageUploader.jsx","sourceRoot":"","sources":["useImageUploader.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\n\r\ntype ImageUploaderProps = {\r\n  maxSize: number;\r\n  allowedFileTypes: string[];\r\n  initialSrc: string;\r\n  onChange: (files: FileList | null) => void;\r\n}\r\n\r\nconst useImageUploader = ({ \r\n  maxSize, \r\n  allowedFileTypes, \r\n  initialSrc, \r\n  onChange \r\n}: ImageUploaderProps) => {\r\n  const [fileError, setFileError] = useState<string>(\"\");\r\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Debug log\r\n    console.log('useImageUploader initialSrc:', initialSrc);\r\n  }, [initialSrc]);\r\n\r\n  // Cleanup function to revoke object URLs\r\n  useEffect(() => {\r\n    return () => {\r\n      if (previewUrl && previewUrl.startsWith('blob:')) {\r\n        console.log('Cleaning up blob URL:', previewUrl);\r\n        URL.revokeObjectURL(previewUrl);\r\n      }\r\n    };\r\n  }, [previewUrl]);\r\n\r\n  const validateFile = useCallback((file: File): string | null => {\r\n    const fsize = Math.round(file.size / 1024);\r\n    \r\n    if (fsize > maxSize) {\r\n      return `Files cannot exceed ${maxSize} KB`;\r\n    }\r\n    \r\n    if (!allowedFileTypes.includes(file.type)) {\r\n      return `You can upload the following types: ${allowedFileTypes.join(', ')}`;\r\n    }\r\n    \r\n    return null;\r\n  }, [maxSize, allowedFileTypes]);\r\n\r\n  const handleFileChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Clean up previous preview URL if it exists\r\n    if (previewUrl && previewUrl.startsWith('blob:')) {\r\n      console.log('Cleaning up previous blob URL:', previewUrl);\r\n      URL.revokeObjectURL(previewUrl);\r\n    }\r\n    console.log('File change event triggered');\r\n    setPreviewUrl(null);\r\n    setFileError(\"\");\r\n    const files = e.target.files;\r\n\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      console.log('Selected file:', file);\r\n      \r\n      const error = validateFile(file);\r\n\r\n      if (error) {\r\n        setFileError(error);\r\n        setPreviewUrl(null);\r\n        onChange(null);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const newPreviewUrl = URL.createObjectURL(file);\r\n        console.log('Created new blob URL:', newPreviewUrl);\r\n        setPreviewUrl(newPreviewUrl);\r\n        setFileError(\"\");\r\n        onChange(files);\r\n      }\r\n\r\n      catch {\r\n        setFileError('Failed to create preview for the selected file');\r\n        onChange(null);\r\n      }\r\n    } else {\r\n      setPreviewUrl(null);\r\n      onChange(null);\r\n    }\r\n  }, [validateFile, onChange, previewUrl]);\r\n\r\n  return {\r\n    previewUrl,\r\n    fileError,\r\n    handleFileChange\r\n  };\r\n};\r\n\r\nexport default useImageUploader;"]}